/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.38
 * Generated at: 2017-10-25 04:54:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>用户管理系统</title>\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://cdn.bootcss.com/bootstrap/4.0.0-beta/css/bootstrap.css\">\n");
      out.write("<link href=\"css/toastr.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<script type=\"text/javascript\" src=\"jquery/jquery-3.2.1.min.js\"></script>\n");
      out.write("<script src=\"js/toastr.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"jquery/jquery.form.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/indexStyle.css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<div id=\"topPanel\">\n");
      out.write("\t\t<div class=\"logo_panel\">\n");
      out.write("\t\t\t<div class=\"logo_content_panel\"></div>\n");
      out.write("\t\t\t<h3>用户管理系统-UMS</h3>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"help_panel\">\n");
      out.write("\t\t\t<ul>\n");
      out.write("\t\t\t\t<li><a href=\"toLogin\" onclick=\"session.invalidate(); \"\n");
      out.write("\t\t\t\t\tclass=\"logout\">退出</a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<form id=\"avatarForm\" action=\"saveAvatar\" method=\"post\"\n");
      out.write("\t\t\tenctype=\"multipart/form-data\">\n");
      out.write("\t\t\t<!-- 把文件框隐藏，在点击图片的时候触发文件框的点击事件 -->\n");
      out.write("\t\t\t<span style=\"display: none\"><input type=\"file\"\n");
      out.write("\t\t\t\tonchange=\"uploadPic()\" name=\"upload\"></span>\n");
      out.write("\t\t</form>\n");
      out.write("\t\t<div class=\"avatar1_panel\">\n");
      out.write("\t\t\t<div class=\"avatar1_content_panel\">\n");
      out.write("\t\t\t\t<img id=\"avatarImg\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${administrator.avatarPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div id=\"bottomPanel\">\n");
      out.write("\t\t<div class=\"menu_panel\">\n");
      out.write("\t\t\t<div class=\"menu_content_panel\">\n");
      out.write("\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t<li class=\"active li1\" onclick=\"accountManage()\"><a\n");
      out.write("\t\t\t\t\t\thref=\"javascript:;\">账号管理</a></li>\n");
      out.write("\t\t\t\t\t<li class=\"li2\" onclick=\"roleManage()\"><a href=\"javascript:;\">角色管理</a>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t<li class=\"li3\" onclick=\"superManage()\"><a href=\"javascript:;\">权限管理</a>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t<li class=\"li4\" onclick=\"departManage()\"><a\n");
      out.write("\t\t\t\t\t\thref=\"javascript:;\">部门管理</a></li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"content_panel\"></div>\n");
      out.write("\t</div>\n");
      out.write("\t<script>\n");
      out.write("\t\t$(function() {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//提示框属性设置\n");
      out.write("\t\t\ttoastr.options = {\n");
      out.write("\t\t\t\t\t//展现时间\n");
      out.write("\t\t\t\t\t\"timeOut\": \"50\", \n");
      out.write("\t\t\t\t\t//消失的动画时间\n");
      out.write("\t\t\t\t\t\"hideDuration\": \"5000\",\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t// 点击图片的时候触发上传文件的输入框的点击事件\n");
      out.write("\t\t\t$(\"#avatarImg\").on(\"click\", function() {\n");
      out.write("\t\t\t\t if (confirm(\"确定要上传头像吗？\")) { \n");
      out.write("\t\t\t\t\t$(\"input[type=file]\").click();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t//功能跳转\n");
      out.write("\t\t\t$(\".li1\").on(\"click\", function() {\n");
      out.write("\t\t\t\t$(\".content_panel\").load(\"accountManage\");\n");
      out.write("\t\t\t}).first().click();\n");
      out.write("\n");
      out.write("\t\t\t$(\".li2\").on(\"click\", function() {\n");
      out.write("\t\t\t\t$(\".content_panel\").load(\"roleManage\");\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t$(\".li3\").on(\"click\", function() {\n");
      out.write("\t\t\t\t$(\".content_panel\").load(\"jurisdictionManage\");\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t$(\".li4\").on(\"click\", function() {\n");
      out.write("\t\t\t\t$(\".content_panel\").load(\"departmentManage\");\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\t\tvar activeModule = \".accountM\";\n");
      out.write("\t\t$(activeModule).toggleClass(\"active\");\n");
      out.write("\t\tvar activeLi = \".li1\";\n");
      out.write("\t\tfunction active(Mid) {\n");
      out.write("\t\t\tif (activeLi != Mid) {\n");
      out.write("\t\t\t\t$(activeLi).toggleClass(\"active\");\n");
      out.write("\t\t\t\t$(Mid).addClass(\"active\");\n");
      out.write("\t\t\t\tactiveLi = Mid;\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t\t};\n");
      out.write("\n");
      out.write("\t\tfunction accountManage() {\n");
      out.write("\t\t\tactive(\".li1\")\n");
      out.write("\t\t};\n");
      out.write("\n");
      out.write("\t\tfunction roleManage() {\n");
      out.write("\t\t\tactive(\".li2\")\n");
      out.write("\t\t};\n");
      out.write("\n");
      out.write("\t\tfunction superManage() {\n");
      out.write("\t\t\tactive(\".li3\")\n");
      out.write("\t\t};\n");
      out.write("\n");
      out.write("\t\tfunction departManage() {\n");
      out.write("\t\t\tactive(\".li4\")\n");
      out.write("\n");
      out.write("\t\t};\n");
      out.write("\n");
      out.write("\t\t//上传头像\n");
      out.write("\t\tfunction uploadPic() {\n");
      out.write("\n");
      out.write("\t\t\tvar file = $(\"input[type=file]\").val();\n");
      out.write("\t\t\t// 文件名\n");
      out.write("\t\t\tvar filename = file.replace(/.*(\\/|\\\\)/, \"\");\n");
      out.write("\t\t\t// 后缀\n");
      out.write("\t\t\tvar fileExt = (/[.]/.exec(filename)) ? /[^.]+$/.exec(filename\n");
      out.write("\t\t\t\t\t.toLowerCase()) : '';\n");
      out.write("\t\t\t// 判断文件格式\n");
      out.write("\t\t\tif (fileExt != \"png\" && fileExt != \"jpg\") {\n");
      out.write("\t\t\t\talert(\"上传的文件格式不符合要求，请上传 png 或者 jpg 格式的图片\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// 上传设置  \n");
      out.write("\t\t\tvar options = {\n");
      out.write("\t\t\t\t// 规定把请求发送到那个URL  \n");
      out.write("\t\t\t\turl : \"saveAvatar\",\n");
      out.write("\t\t\t\t// 请求方式  \n");
      out.write("\t\t\t\ttype : \"post\",\n");
      out.write("\t\t\t\t// 服务器响应的数据类型  \n");
      out.write("\t\t\t\tdataType : \"json\",\n");
      out.write("\t\t\t\t// 请求成功时执行的回调函数  \n");
      out.write("\t\t\t\tsuccess : function(data, status, xhr) {\n");
      out.write("\t\t\t\t\ttoastr.success(\"头像修改成功！\");\n");
      out.write("\t\t\t\t\t// 图片显示地址  \n");
      out.write("\t\t\t\t\t$(\"#avatarImg\").attr(\"src\", data.imgPath);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t$(\"#avatarForm\").ajaxSubmit(options);\n");
      out.write("\t\t}\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
