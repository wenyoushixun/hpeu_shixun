/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.38
 * Generated at: 2017-10-25 11:15:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class confirmQuestion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"zh\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<!--<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">-->\r\n");
      out.write("<title>验证密保问题</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/loginStyle.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"htmleaf-container\">\r\n");
      out.write("\t\t<div class=\"wrapper\">\r\n");
      out.write("\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t<h2>请输入您的密保问题</h2>\r\n");
      out.write("\t\t\t\t<div class=\"group-forms\">\r\n");
      out.write("\t\t\t\t\t<!-- 注册div -->\r\n");
      out.write("\t\t\t\t\t<div class=\"view  view-confirmQuestion \" id=\"1\"\r\n");
      out.write("\t\t\t\t\t\tdata-za-module=\"confirmQuestionForm\">\r\n");
      out.write("\t\t\t\t\t\t<form class=\"confirmQuestion-form\" action=\"checkQuestion\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"confirmQuestion-form\" autocomplete=\"off\" method=\"POST\"\r\n");
      out.write("\t\t\t\t\t\t\tnovalidate=\"novalidate\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"group-inputs\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"name input-wrapper\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input required=\"\" type=\"text\" id=\"administratorId\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname=\"administrator.administratorId\" aria-label=\"用户名\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmaxlength=\"16\" placeholder=\"用户名\"> <label\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"error is-visible\">请填写姓名</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"question input-wrapper\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<select name=\"administrator.question\" required\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"请选择密保问题\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"您的生日？？\">您的生日？？</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"您父亲/母亲的名字？？\">您父亲/母亲的名字？？</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"您父亲/母亲的生日？？\">您父亲/母亲的生日？？</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"您小学班主任的名字？？\">您小学班主任的名字？？</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"您高中班主任的名字？？\">您高中班主任的名字？？</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"answer input-wrapper\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input required=\"\" type=\"text\" name=\"administrator.answer\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"密保答案\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"button-wrapper command\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<!--<input  class=\"sign-button submit\" type=\"button\" name=\"\" id=\"Signup-button\" onclick=\"tosignin()\" value=\"Signup\" />-->\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"confirmQuestion-button submit\" type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"confirmQuestion-button\">提交验证</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<ul class=\"bg-bubbles\">\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t\t<li></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script src=\"jquery/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tvar activeForm = \".view-confirmQuestion\";\r\n");
      out.write("\t\t$(activeForm).toggleClass(\"active\");\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t// //登录验证大块\r\n");
      out.write("\t\t// // function loginForm() {\r\n");
      out.write("\t\t// //     var $groupforms = $(\".group-forms\");\r\n");
      out.write("\t\t// //     var $username=$groupforms.find(\".view-signin .signin-form .group-inputs .account input\").val();\r\n");
      out.write("\t\t// //     var $password=$groupforms.find(\".view-signin .signin-form .group-inputs .pwd input\").val();\r\n");
      out.write("\t\t// //     //判断是否输入值\r\n");
      out.write("\t\t// //     if ($username==\"\" || $password=\"\") {\r\n");
      out.write("\t\t// //         alert(\"用户名或密码不能为空\");\r\n");
      out.write("\t\t// //         return;\r\n");
      out.write("\t\t// //     } else {\r\n");
      out.write("\t\t// //         alert(\"登录成功\")\r\n");
      out.write("\r\n");
      out.write("\t\t// //     }\r\n");
      out.write("\t\t// // }\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<div\r\n");
      out.write("\t\tstyle=\"text-align: center; margin: 50px 0; font: normal 14px/24px 'MicroSoft YaHei'; color: #000000\">\r\n");
      out.write("\t\t<h1>① 验证密保问题</h1>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
